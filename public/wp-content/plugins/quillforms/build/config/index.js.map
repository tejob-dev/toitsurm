{"version":3,"file":"config/index.js","mappings":"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","sources":["webpack://quillforms/webpack/bootstrap","webpack://quillforms/webpack/runtime/make namespace object","webpack://quillforms/./packages/config/build-module/@quillforms/config/src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable jsdoc/check-line-alignment */\nimport type { ConfigData } from './types/config-data';\nimport type { Plans } from './types/plans';\nimport type { License } from './types/license';\nimport fonts from './json/fonts.json';\nimport theme from './json/theme-properties.json';\nimport messages from './json/messages.json';\nimport { InitialPayload } from './types/initial-payload';\nimport type { MessagesStructure, ThemeStructure } from '@quillforms/types';\nimport { StoreAddons } from './types/store-addons';\nimport { Currencies } from './types/currencies';\n\nexport type { InitialPayload };\nconst configData: ConfigData = {\n\tinitialPayload: {\n\t\tid: '',\n\t\tblocks: [],\n\t\tmessages: {},\n\t\ttheme: undefined,\n\t\tnotifications: [],\n\t\tslug: '',\n\t\ttitle: { rendered: '' },\n\t\tlogic: undefined,\n\t},\n\tfonts,\n\tstructures: {\n\t\ttheme,\n\t\tmessages,\n\t},\n\tadminUrl: '',\n\tpluginDirUrl: '',\n\tformId: 0,\n\tformUrl: '',\n\tmaxUploadSize: 8,\n\tisWPEnv: false,\n\tplans: {},\n\tlicense: null,\n\tstoreAddons: {},\n\tcurrencies: {},\n};\n\n/**\n * Returns configuration value for given key\n *\n * If the requested key isn't defined in the configuration\n * data then this will report the failure with either an\n * error or a console warning.\n\n * @param {ConfigData} data Configurat data.\n * @returns A function that gets the value of property named by the key\n */\nconst config =\n\t( data: ConfigData ) =>\n\t< T >( key: string ): T | undefined => {\n\t\tif ( key in data ) {\n\t\t\treturn data[ key ] as T;\n\t\t}\n\t\treturn undefined;\n\t};\n\n/**\n * Get theme structure\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getThemeStructure = ( data: ConfigData ) => (): ThemeStructure => {\n\treturn data.structures.theme;\n};\n\n/**\n * Get messages structure\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getMessagesStructure = ( data: ConfigData ) => (): MessagesStructure => {\n\treturn data.structures.messages;\n};\n\n/**\n * Set messages structure\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setMessagesStructure =\n\t( data: ConfigData ) => ( value: MessagesStructure ) => {\n\t\tdata.structures.messages = value;\n\t};\n\n/**\n * Get fonts\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getFonts = ( data: ConfigData ) => (): Record< string, string > => {\n\treturn data.fonts;\n};\n\n/**\n * Is wp environment active.\n *\n * @param data\n */\nconst isWPEnv = ( data: ConfigData ) => (): boolean => {\n\treturn data.isWPEnv;\n};\n\n/**\n * Set wp env flag.\n *\n * @param data\n */\nconst setWPEnv = ( data: ConfigData ) => ( value: boolean ) => {\n\tdata.isWPEnv = value;\n};\n/**\n * set initial builder payload\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setInitialPayload = ( data: ConfigData ) => ( value: InitialPayload ) => {\n\tdata.initialPayload = value;\n};\n\n/**\n * Get initial builder payload\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getInitialPayload = ( data: ConfigData ) => (): InitialPayload => {\n\treturn data.initialPayload;\n};\n\n/**\n * Get admin url\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getAdminUrl = ( data: ConfigData ) => (): string => {\n\treturn data.adminUrl;\n};\n\n/**\n * Set admin url\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setAdminUrl = ( data: ConfigData ) => ( value: string ) => {\n\tdata.adminUrl = value;\n};\n\n/**\n * Get plugin dir url\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getPluginDirUrl = ( data: ConfigData ) => (): string => {\n\treturn data.pluginDirUrl;\n};\n\n/**\n * Set plugin dir url\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setPluginDirUrl = ( data: ConfigData ) => ( value: string ) => {\n\tdata.pluginDirUrl = value;\n};\n\n/**\n * Get form id\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getFormId = ( data: ConfigData ) => (): number => {\n\treturn data.formId;\n};\n\n/**\n * Set form id\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setFormId = ( data: ConfigData ) => ( value: number ) => {\n\tdata.formId = value;\n};\n\n/**\n * Get form url\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getFormUrl = ( data: ConfigData ) => (): string => {\n\treturn data.formUrl;\n};\n\n/**\n * Set form url\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setFormUrl = ( data: ConfigData ) => ( value: string ) => {\n\tdata.formUrl = value;\n};\n\n/**\n * Get max upload size\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getMaxUploadSize = ( data: ConfigData ) => (): number => {\n\treturn data.maxUploadSize;\n};\n\n/**\n * Get plans\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getPlans = ( data: ConfigData ) => (): Plans => {\n\treturn data.plans;\n};\n\n/**\n * Set plans\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setPlans = ( data: ConfigData ) => ( value: Plans ) => {\n\tdata.plans = value;\n};\n\n/**\n * Get license\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getLicense = ( data: ConfigData ) => (): License => {\n\treturn data.license;\n};\n\n/**\n * Set license\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setLicense = ( data: ConfigData ) => ( value: License ) => {\n\tdata.license = value;\n};\n\n/**\n * Is plan accessible\n *\n * @param data the json environment configuration to use for getting config values\n * @returns {boolean}\n */\nconst isPlanAccessible =\n\t( data: ConfigData ) =>\n\t( featurePlanKey: string ): boolean => {\n\t\tif ( data.license?.status !== 'valid' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet plansKeys = Object.keys( data.plans );\n\t\tlet licensePlanIndex = plansKeys.indexOf( data.license.plan );\n\t\tlet featurePlanIndex = plansKeys.indexOf( featurePlanKey );\n\n\t\tif ( licensePlanIndex === -1 || featurePlanIndex === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn licensePlanIndex >= featurePlanIndex;\n\t};\n\n/**\n * Get store addons\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getStoreAddons = ( data: ConfigData ) => (): StoreAddons => {\n\treturn data.storeAddons;\n};\n\n/**\n * Set store addons\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setStoreAddons = ( data: ConfigData ) => ( value: StoreAddons ) => {\n\tdata.storeAddons = value;\n};\n\n/**\n * Get currencies\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst getCurrencies = ( data: ConfigData ) => (): Currencies => {\n\treturn data.currencies;\n};\n\n/**\n * Set currencies\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setCurrencies = ( data: ConfigData ) => ( value: Currencies ) => {\n\tdata.currencies = value;\n};\n\n/**\n * Set max upload size\n *\n * @param data the json environment configuration to use for getting config values\n */\nconst setMaxUploadSize = ( data: ConfigData ) => ( value: number ) => {\n\tdata.maxUploadSize = value;\n};\n\nexport interface ConfigApi {\n\t< T >( key: string ): T;\n\tsetInitialPayload: ( value: InitialPayload ) => void;\n\tgetInitialPayload: () => InitialPayload;\n\tgetMessagesStructure: () => MessagesStructure;\n\tsetMessagesStructure: ( value: MessagesStructure ) => void;\n\tgetThemeStructure: () => ThemeStructure;\n\tgetFonts: () => Record< string, string >;\n\tisWPEnv: () => boolean;\n\tsetWPEnv: ( value: boolean ) => void;\n\tgetAdminUrl: () => string;\n\tsetAdminUrl: ( value: string ) => void;\n\tgetPluginDirUrl: () => string;\n\tsetPluginDirUrl: ( value: string ) => void;\n\tgetFormId: () => number;\n\tsetFormId: ( value: number ) => void;\n\tgetFormUrl: () => string;\n\tsetFormUrl: ( value: string ) => void;\n\tgetMaxUploadSize: () => number;\n\tsetMaxUploadSize: ( value: number ) => void;\n\tgetPlans: () => Plans;\n\tsetPlans: ( value: Plans ) => void;\n\tgetLicense: () => License;\n\tsetLicense: ( value: License ) => void;\n\tisPlanAccessible: ( featurePlanKey: string ) => boolean;\n\tgetStoreAddons: () => StoreAddons;\n\tsetStoreAddons: ( value: StoreAddons ) => void;\n\tgetCurrencies: () => Currencies;\n\tsetCurrencies: ( value: Currencies ) => void;\n\tisLicenseValid: () => boolean;\n\tsetIsLicenseValid: ( value: boolean ) => void;\n}\n\nconst createConfig = ( data: ConfigData ): ConfigApi => {\n\tconst configApi = config( data ) as ConfigApi;\n\tconfigApi.setInitialPayload = setInitialPayload( data );\n\tconfigApi.getInitialPayload = getInitialPayload( data );\n\tconfigApi.getMessagesStructure = getMessagesStructure( data );\n\tconfigApi.setMessagesStructure = setMessagesStructure( data );\n\tconfigApi.getThemeStructure = getThemeStructure( data );\n\tconfigApi.getFonts = getFonts( data );\n\tconfigApi.isWPEnv = isWPEnv( data );\n\tconfigApi.setWPEnv = setWPEnv( data );\n\tconfigApi.getAdminUrl = getAdminUrl( data );\n\tconfigApi.setAdminUrl = setAdminUrl( data );\n\tconfigApi.getPluginDirUrl = getPluginDirUrl( data );\n\tconfigApi.setPluginDirUrl = setPluginDirUrl( data );\n\tconfigApi.getFormId = getFormId( data );\n\tconfigApi.setFormId = setFormId( data );\n\tconfigApi.getFormUrl = getFormUrl( data );\n\tconfigApi.setFormUrl = setFormUrl( data );\n\tconfigApi.getMaxUploadSize = getMaxUploadSize( data );\n\tconfigApi.setMaxUploadSize = setMaxUploadSize( data );\n\tconfigApi.getPlans = getPlans( data );\n\tconfigApi.setPlans = setPlans( data );\n\tconfigApi.getLicense = getLicense( data );\n\tconfigApi.setLicense = setLicense( data );\n\tconfigApi.isPlanAccessible = isPlanAccessible( data );\n\tconfigApi.getStoreAddons = getStoreAddons( data );\n\tconfigApi.setStoreAddons = setStoreAddons( data );\n\tconfigApi.getCurrencies = getCurrencies( data );\n\tconfigApi.setCurrencies = setCurrencies( data );\n\treturn configApi;\n};\n\nconst configApi = createConfig( configData );\n\nexport default configApi;\n"],"names":["configData","initialPayload","id","blocks","messages","theme","undefined","notifications","slug","title","rendered","logic","fonts","structures","adminUrl","pluginDirUrl","formId","formUrl","maxUploadSize","isWPEnv","plans","license","storeAddons","currencies","config","data","key","getThemeStructure","getMessagesStructure","setMessagesStructure","value","getFonts","setWPEnv","setInitialPayload","getInitialPayload","getAdminUrl","setAdminUrl","getPluginDirUrl","setPluginDirUrl","getFormId","setFormId","getFormUrl","setFormUrl","getMaxUploadSize","getPlans","setPlans","getLicense","setLicense","isPlanAccessible","featurePlanKey","status","plansKeys","Object","keys","licensePlanIndex","indexOf","plan","featurePlanIndex","getStoreAddons","setStoreAddons","getCurrencies","setCurrencies","setMaxUploadSize","createConfig","configApi"],"sourceRoot":""}
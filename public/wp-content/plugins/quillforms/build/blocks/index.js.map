{"version":3,"file":"blocks/index.js","mappings":"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","sources":["webpack://quillforms/./packages/blocks/build-module/api/@quillforms/blocks/src/api/index.ts","webpack://quillforms/./packages/blocks/build-module/api/@quillforms/blocks/src/api/registration.ts","webpack://quillforms/./packages/blocks/build-module/api/@quillforms/blocks/src/api/set-block-admin-settings.ts","webpack://quillforms/./packages/blocks/build-module/api/@quillforms/blocks/src/api/set-block-renderer-settings.ts","webpack://quillforms/./packages/blocks/build-module/api/@quillforms/blocks/src/api/utils.ts","webpack://quillforms/./packages/blocks/build-module/store/@quillforms/blocks/src/store/actions.ts","webpack://quillforms/./packages/blocks/build-module/store/@quillforms/blocks/src/store/constants.ts","webpack://quillforms/./packages/blocks/build-module/store/@quillforms/blocks/src/store/index.ts","webpack://quillforms/./packages/blocks/build-module/store/@quillforms/blocks/src/store/reducer.ts","webpack://quillforms/./packages/blocks/build-module/store/@quillforms/blocks/src/store/selectors.ts","webpack://quillforms/./packages/blocks/build-module/@quillforms/blocks/src/types.ts","webpack://quillforms/external window \"lodash\"","webpack://quillforms/external window [\"qf\",\"utils\"]","webpack://quillforms/external window [\"wp\",\"data\"]","webpack://quillforms/webpack/bootstrap","webpack://quillforms/webpack/runtime/compat get default export","webpack://quillforms/webpack/runtime/define property getters","webpack://quillforms/webpack/runtime/hasOwnProperty shorthand","webpack://quillforms/webpack/runtime/make namespace object","webpack://quillforms/./packages/blocks/build-module/@quillforms/blocks/src/index.ts"],"sourcesContent":["export { setBlockAdminSettings } from './set-block-admin-settings';\nexport { setBlockRendererSettings } from './set-block-renderer-settings';\nexport { registerBlockType, getBlockType } from './registration';\nexport { sanitizeBlocks, sanitizeBlockAttributes } from './utils';\n","/* eslint-disable no-console */\n/**\n * WordPress Dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * External Dependencies\n */\nimport { pick, isPlainObject } from 'lodash';\n\n/**\n * Internal Dependencies\n */\nimport { setBlockAdminSettings } from './set-block-admin-settings';\nimport { setBlockRendererSettings } from './set-block-renderer-settings';\nimport type { BlockTypeSettings, BlockSupportedFeatures } from '../types';\n\nexport const getDefaultBlockSupports = (): BlockSupportedFeatures => {\n\treturn {\n\t\teditable: true,\n\t\trequired: true,\n\t\tattachment: true,\n\t\tdescription: true,\n\t\tlogic: true,\n\t\tlogicConditions: true,\n\t\tnumeric: false,\n\t\tchoices: false,\n\t\tpayments: false,\n\t\tpoints: false,\n\t};\n};\n\n/**\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made available as an option to any\n * editor interface where blocks are implemented.\n *\n * @param  name     Block name.\n * @param  settings Block settings.\n *\n * @return The block settings, if it has been successfully registered;\n * otherwise `undefined`.\n */\nexport const registerBlockType = (\n\tname: string,\n\tsettings: BlockTypeSettings\n): BlockTypeSettings | undefined => {\n\tif ( typeof name !== 'string' ) {\n\t\tconsole.error( 'Block names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( select( 'quillForms/blocks' ).getBlockType( name ) ) {\n\t\tconsole.error( 'Block \"' + name + '\" is already registered.' );\n\t\treturn;\n\t}\n\n\tsettings.supports = {\n\t\t...getDefaultBlockSupports(),\n\t\t...settings.supports,\n\t};\n\n\tlet { attributes } = settings;\n\tconst { supports } = settings;\n\n\tif ( ! attributes || ! isPlainObject( attributes ) ) {\n\t\tattributes = {};\n\t}\n\tif ( supports.required ) {\n\t\tattributes.required = {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t};\n\t}\n\n\tif ( supports.attachment ) {\n\t\tattributes.attachment = {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\turl: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\tif ( supports.description ) {\n\t\tattributes.description = {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t};\n\t}\n\tif ( supports.theme ) {\n\t\tattributes.themeId = {\n\t\t\ttype: 'number',\n\t\t};\n\t}\n\tattributes.label = {\n\t\ttype: 'string',\n\t\tdefault: '',\n\t};\n\tattributes.customHTML = {\n\t\ttype: 'string',\n\t\tdefault: '',\n\t};\n\tattributes.layout = {\n\t\ttype: 'string',\n\t\tdefault: 'stack',\n\t};\n\tattributes.attachmentFocalPoint = {\n\t\ttype: 'object',\n\t\tdefault: {\n\t\t\tx: 0.5,\n\t\t\ty: 0.5,\n\t\t},\n\t};\n\n\tattributes.attachmentFancyBorderRadius = {\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t};\n\n\tattributes.attachmentBorderRadius = {\n\t\ttype: 'boolean',\n\t\tdefault: '0px',\n\t};\n\n\tattributes.attachmentMaxWidth = {\n\t\ttype: 'string',\n\t\tdefault: 'none',\n\t};\n\tsettings.attributes = attributes;\n\n\tdispatch( 'quillForms/blocks' ).addBlockTypes( {\n\t\tname,\n\t\t...pick( settings, [ 'attributes', 'supports', 'logicalOperators' ] ),\n\t} );\n\tsetBlockRendererSettings( name, settings );\n\tsetBlockAdminSettings( name, settings );\n\treturn settings;\n};\n\n/**\n * Returns a registered block type.\n *\n * @param {string} name Block name.\n *\n * @return {?BlockTypeSettingss} Block type.\n */\nexport function getBlockType( name: string ): BlockTypeSettings | undefined {\n\treturn select( 'quillForms/blocks' ).getBlockType( name );\n}\n","/* eslint no-console: [ 'error', { allow: [ 'error' ] } ] */\n/**\n * WordPress Dependencies\n */\nimport { dispatch, select } from '@wordpress/data';\n\n/**\n * External Dependencies\n */\nimport { isFunction, pick } from 'lodash';\n\n/**\n * Internal Dependencies\n */\nimport { isValidIcon, normalizeIconObject } from '@quillforms/utils';\nimport { BlockAdminSettings } from '../types';\n\n/**\n * Set block admin settings.\n * Block admin settings is the configuration for the block that should be loaded at the admin only.\n * We should define here the block icon, controls, color and logic control.\n *\n * @param {string}             name       Block name.\n * @param {BlockAdminSettings} settings   Block configuration.\n *\n */\nexport const setBlockAdminSettings = (\n\tname: string,\n\tsettings: BlockAdminSettings\n): BlockAdminSettings | void => {\n\tsettings = {\n\t\ttitle: 'Untitled',\n\t\tcolor: '#333s',\n\t\ticon: 'plus',\n\t\torder: 20,\n\t\tcontrols: () => null,\n\t\t...settings,\n\t};\n\n\tif ( typeof name !== 'string' ) {\n\t\tconsole.error( 'Block types must be strings.' );\n\t\treturn;\n\t}\n\n\tconst blockType = select( 'quillForms/blocks' ).getBlockType( name );\n\tif ( ! blockType ) {\n\t\tconsole.error(\n\t\t\t`The ${ name } block isn't registered. Please register it first!`\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.color !== 'string' ) {\n\t\tconsole.error( 'The \"color\" property must be a valid string!' );\n\t}\n\n\tsettings.icon = normalizeIconObject( settings.icon );\n\n\tif ( ! isValidIcon( settings.icon.src ) ) {\n\t\tconsole.error( 'The \"icon\" property must be a valid function!' );\n\t\treturn;\n\t}\n\n\tif ( settings.logicControl && ! isFunction( settings.logicControl ) ) {\n\t\tconsole.error(\n\t\t\t'The \"logicControl\" property must be a valid function!'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.entryDetails && ! isFunction( settings.entryDetails ) ) {\n\t\tconsole.error(\n\t\t\t'The \"entryDetails\" property must be a valid function!'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! isFunction( settings.controls ) ) {\n\t\tconsole.error( 'The \"controls\" property must be a valid function!' );\n\t\treturn;\n\t}\n\n\tif ( settings.order && isNaN( settings.order ) ) {\n\t\tconsole.error( 'The \"order\" property must be a valid number!' );\n\t\treturn;\n\t}\n\n\tif ( ! isFunction( settings.getChoices ) ) {\n\t\t// @ts-ignore\n\t\tsettings.getChoices = ( { id, attributes } ) => {\n\t\t\treturn [];\n\t\t};\n\t}\n\n\tdispatch( 'quillForms/blocks' ).setBlockAdminSettings(\n\t\tpick( settings, [\n\t\t\t'controls',\n\t\t\t'entryDetails',\n\t\t\t'logicControl',\n\t\t\t'color',\n\t\t\t'icon',\n\t\t\t'title',\n\t\t\t'order',\n\t\t\t'getChoices',\n\t\t] ),\n\t\tname\n\t);\n};\n","/* eslint no-console: [ 'error', { allow: [ 'error' ] } ] */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * External Dependencies\n */\nimport { isFunction, pick } from 'lodash';\n\nimport type { BlockRendererSettings } from '../types';\n/**\n * Set block renderer settings\n * Set block renderer settings is for defining renderer behavior for the block\n *\n * @param {string} name     Block name.\n * @param {Object} settings Block renderer settings.\n *\n */\nexport const setBlockRendererSettings = (\n\tname: string,\n\tsettings: BlockRendererSettings\n): BlockRendererSettings | undefined => {\n\tsettings = {\n\t\tdisplay: () => null,\n\t\t...settings,\n\t};\n\n\tif ( typeof name !== 'string' ) {\n\t\tconsole.error( 'Block types must be strings.' );\n\t\treturn;\n\t}\n\n\tconst blockType = select( 'quillForms/blocks' ).getBlockType( name );\n\n\tif ( ! blockType ) {\n\t\tconsole.error(\n\t\t\t`The ${ name } block isn't registered. Please register it first!`\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! isFunction( settings.display ) ) {\n\t\tconsole.error( 'The \"display\" property must be a valid function!' );\n\t\treturn;\n\t}\n\n\tif ( settings.mergeTag && ! isFunction( settings.mergeTag ) ) {\n\t\tconsole.error( 'The \"mergeTag\" property must be a valid function!' );\n\t\treturn;\n\t}\n\n\tif ( settings.counterIcon && ! isFunction( settings.counterIcon ) ) {\n\t\tconsole.error( 'The \"counterIcon\" property must be a valid function!' );\n\t\treturn;\n\t}\n\n\tif ( settings.nextBtn && ! isFunction( settings.nextBtn ) ) {\n\t\tconsole.error( 'The \"nextBtn\" property must be a valid function!' );\n\t\treturn;\n\t}\n\tif (\n\t\tsettings.isConditionFulfilled &&\n\t\t! isFunction( settings.isConditionFulfilled )\n\t) {\n\t\tconsole.error(\n\t\t\t'The \"isConditionFulfilled\" property must be a valid function!'\n\t\t);\n\t\treturn;\n\t}\n\tif ( ! settings.isConditionFulfilled ) {\n\t\tsettings.isConditionFulfilled = (\n\t\t\tconditionOperator: string,\n\t\t\tconditionVal: any,\n\t\t\tfieldValue: any\n\t\t): boolean => {\n\t\t\tswitch ( conditionOperator ) {\n\t\t\t\tcase 'is': {\n\t\t\t\t\tif ( Array.isArray( fieldValue ) )\n\t\t\t\t\t\treturn fieldValue.includes( conditionVal );\n\n\t\t\t\t\treturn fieldValue == conditionVal;\n\t\t\t\t}\n\n\t\t\t\tcase 'is_not': {\n\t\t\t\t\tif ( Array.isArray( fieldValue ) )\n\t\t\t\t\t\treturn ! fieldValue.includes( conditionVal );\n\n\t\t\t\t\treturn fieldValue != conditionVal;\n\t\t\t\t}\n\n\t\t\t\tcase 'greater_than': {\n\t\t\t\t\tif ( isNaN( fieldValue ) || isNaN( conditionVal ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tparseFloat( fieldValue ) > parseFloat( conditionVal )\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcase 'lower_than': {\n\t\t\t\t\tif ( isNaN( fieldValue ) || isNaN( conditionVal ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tparseFloat( fieldValue ) < parseFloat( conditionVal )\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcase 'contains': {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof fieldValue !== 'string' ||\n\t\t\t\t\t\ttypeof conditionVal !== 'string'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn fieldValue.indexOf( conditionVal ) !== -1;\n\t\t\t\t}\n\n\t\t\t\tcase 'not_contains': {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof fieldValue !== 'string' ||\n\t\t\t\t\t\ttypeof conditionVal !== 'string'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn fieldValue.indexOf( conditionVal ) === -1;\n\t\t\t\t}\n\n\t\t\t\tcase 'starts_with': {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof fieldValue !== 'string' ||\n\t\t\t\t\t\ttypeof conditionVal !== 'string'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn fieldValue.startsWith( conditionVal );\n\t\t\t\t}\n\n\t\t\t\tcase 'ends_with': {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof fieldValue !== 'string' ||\n\t\t\t\t\t\ttypeof conditionVal !== 'string'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn fieldValue.endsWith( conditionVal );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tif ( settings.getNumericVal && ! isFunction( settings.getNumericVal ) ) {\n\t\tconsole.error( 'The \"getNumericVal\" must be a function' );\n\t\treturn;\n\t}\n\tif ( ! settings.getNumericVal ) {\n\t\tsettings.getNumericVal = ( val, _attributes ) => {\n\t\t\treturn parseFloat( val );\n\t\t};\n\t}\n\tdispatch( 'quillForms/blocks' ).setBlockRendererSettings(\n\t\tpick( settings, [\n\t\t\t'display',\n\t\t\t'mergeTag',\n\t\t\t'nextBtn',\n\t\t\t'counterIcon',\n\t\t\t'isConditionFulfilled',\n\t\t\t'getNumericVal',\n\t\t\t'displayLayout',\n\t\t] ),\n\t\tname\n\t);\n\n\treturn settings;\n};\n","/**\n * External Dependencies\n */\nimport { reduce, isEmpty, map } from 'lodash';\nimport type { BlockAttributes, FormBlocks } from '@quillforms/types';\n\n/**\n * Internal Dependencies\n */\nimport { getBlockType } from './registration';\n\nexport function sanitizeBlockAttributes(\n\tblockName: string,\n\tattributes: BlockAttributes\n) {\n\t// Get the block type\n\tconst blockType = getBlockType( blockName );\n\n\tif ( undefined === blockType ) {\n\t\tthrow new Error( `Block type '${ blockName }' is not registered.` );\n\t}\n\t// Ensure attributes contains only values defined by block type, and merge\n\t// default values for missing attributes.\n\treturn reduce(\n\t\tblockType.attributes,\n\t\t( accumulator, schema, key ) => {\n\t\t\tconst value = attributes[ key ];\n\n\t\t\tif ( undefined !== value ) {\n\t\t\t\taccumulator[ key ] = value;\n\t\t\t} else if ( schema.hasOwnProperty( 'default' ) ) {\n\t\t\t\taccumulator[ key ] = schema.default;\n\t\t\t}\n\n\t\t\treturn accumulator;\n\t\t},\n\t\t{} as Record< string, unknown >\n\t);\n}\n\n/**\n * Sanitize blocks\n * Transform unknwon blocks and sanitize block attributes\n *\n * @param {FormBlocks} blocks The form blocks to be sanitized\n *\n * @return {FormBlocks} The sanitized blocks\n */\nexport const sanitizeBlocks = ( blocks: FormBlocks ): FormBlocks => {\n\tif ( isEmpty( blocks ) ) {\n\t\treturn [];\n\t}\n\n\treturn map( blocks, ( block ) => {\n\t\tif ( getBlockType( block.name ) )\n\t\t\treturn {\n\t\t\t\t...block,\n\t\t\t\tattributes: sanitizeBlockAttributes(\n\t\t\t\t\tblock.name,\n\t\t\t\t\tblock.attributes ? block.attributes : {}\n\t\t\t\t),\n\t\t\t};\n\t\treturn {\n\t\t\t...block,\n\t\t\tname: 'unknown',\n\t\t\tattributes: sanitizeBlockAttributes(\n\t\t\t\t'unknown',\n\t\t\t\tblock.attributes ? block.attributes : {}\n\t\t\t),\n\t\t};\n\t} );\n};\n","import {\n\tSET_BLOCK_ADMIN_SETTINGS,\n\tADD_BLOCK_TYPES,\n\tSET_BLOCK_RENDERER_SETTINGS,\n} from './constants';\nimport type {\n\tBlockAdminSettings,\n\tBlockRendererSettings,\n\tBlockActionTypes,\n\tBlockTypeInterface,\n} from '../types';\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in registering block renderer settings.\n *\n * @param  blockRendererSettings Block renderer settings which define block renderer behavior.\n * @param  name                  The block name.\n *\n * @return Action object.\n */\nexport const setBlockRendererSettings = (\n\tblockRendererSettings: BlockRendererSettings,\n\tname: string\n): BlockActionTypes => {\n\treturn {\n\t\ttype: SET_BLOCK_RENDERER_SETTINGS,\n\t\tsettings: blockRendererSettings,\n\t\tname,\n\t};\n};\n\n/**\n * Returns an action object used in registering block editor configuration.\n *\n * @param  blockAdminSettings Block admin settings which defines block behavior at admin.\n * @param  name               The block name.\n *\n * @return Action object.\n */\nexport const setBlockAdminSettings = (\n\tblockAdminSettings: BlockAdminSettings,\n\tname: string\n): BlockActionTypes => {\n\treturn {\n\t\ttype: SET_BLOCK_ADMIN_SETTINGS,\n\t\tsettings: blockAdminSettings,\n\t\tname,\n\t};\n};\n\n/**\n * Returns an action object used in signalling that block types have been added.\n *\n * @param  blockTypes Block types received.\n *\n * @return Action object.\n */\nexport const addBlockTypes = (\n\tblockTypes: BlockTypeInterface | BlockTypeInterface[]\n): BlockActionTypes => {\n\treturn {\n\t\ttype: ADD_BLOCK_TYPES,\n\t\tblockTypes: castArray( blockTypes ),\n\t};\n};\n","export const SET_BLOCK_RENDERER_SETTINGS = 'SET_BLOCK_RENDERER_SETTINGS';\nexport const SET_BLOCK_ADMIN_SETTINGS = 'SET_BLOCK_ADMIN_SETTINGS';\nexport const ADD_BLOCK_TYPES = 'ADD_BLOCK_TYPES';\nexport const STORE_KEY = 'quillForms/blocks';\n","/**\n * WordPress Dependencies\n */\nimport { register, createReduxStore } from '@wordpress/data';\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { STORE_KEY } from './constants';\nimport type { State } from './reducer';\n\nconst store = createReduxStore< State, typeof actions, typeof selectors >(\n\tSTORE_KEY,\n\t{\n\t\tactions,\n\t\tselectors,\n\t\treducer,\n\t}\n);\nexport default store;\nregister( store );\n","/**\n * External dependencies\n */\nimport type { Reducer } from 'redux';\nimport { keyBy } from 'lodash';\n\n/**\n * Internal Dependencies\n */\nimport {\n\tSET_BLOCK_ADMIN_SETTINGS,\n\tSET_BLOCK_RENDERER_SETTINGS,\n\tADD_BLOCK_TYPES,\n} from './constants';\nimport type { BlockActionTypes, BlocksState } from '../types';\n\nconst initialState: BlocksState = {\n\tunknown: {\n\t\ttitle: 'Unknown',\n\t\tsupports: {\n\t\t\teditable: true,\n\t\t\tdescription: true,\n\t\t\tattachment: true,\n\t\t\trequired: false,\n\t\t\tlogic: true,\n\t\t},\n\t\tlogicalOperators: [\n\t\t\t'is',\n\t\t\t'is_not',\n\t\t\t'starts_with',\n\t\t\t'greater_than',\n\t\t\t'lower_than',\n\t\t\t'ends_with',\n\t\t\t'contains',\n\t\t\t'not_contains',\n\t\t],\n\t},\n};\n\n/**\n * Reducer returning an array of registered blocks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nconst BlocksReducer: Reducer< BlocksState, BlockActionTypes > = (\n\tstate = initialState,\n\taction\n): BlocksState => {\n\tswitch ( action.type ) {\n\t\tcase SET_BLOCK_ADMIN_SETTINGS:\n\t\tcase SET_BLOCK_RENDERER_SETTINGS:\n\t\t\tconst { name } = action;\n\t\t\tif ( ! state[ name ] ) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ name ]: {\n\t\t\t\t\t...state[ name ],\n\t\t\t\t\t...action.settings,\n\t\t\t\t},\n\t\t\t};\n\t\tcase ADD_BLOCK_TYPES: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.blockTypes, 'name' ),\n\t\t\t};\n\t\t}\n\t}\n\treturn state;\n};\n\nexport type State = ReturnType< typeof BlocksReducer >;\nexport default BlocksReducer;\n","/**\n * External dependencies\n */\nimport { get, sortBy, keys, reduce } from 'lodash';\n\n/**\n * Internal Dependencies\n */\nimport type {\n\tBlockTypeSettings,\n\tBlocksState,\n\tBlockSupportedFeatures,\n\tBlockTypeInterface,\n} from '../types';\n/**\n * Given a block name or block type object, returns the corresponding\n * normalized block type object.\n *\n * @param {Object}          state      Blocks state.\n * @param {(string|Object)} nameOrType Block name or type object\n *\n * @return {Object} Block type object.\n */\nconst getNormalizedBlockType = (\n\tstate: BlocksState,\n\tnameOrType: string | BlockTypeInterface\n) =>\n\t'string' === typeof nameOrType\n\t\t? getBlockType( state, nameOrType )\n\t\t: nameOrType;\n\n/**\n * Get all blocks registered.\n *\n * @param {Object} state Global application state.\n *\n * @return {Array} Registered blocks\n */\nexport const getBlockTypes = ( state: BlocksState ): BlocksState => {\n\treturn reduce(\n\t\tsortBy( keys( state ), ( blockName ) => state[ blockName ].order ),\n\t\t( acc, key ) => {\n\t\t\tif ( key !== 'unknown' ) {\n\t\t\t\tacc[ key ] = state[ key ];\n\t\t\t}\n\t\t\treturn acc;\n\t\t},\n\t\t{}\n\t);\n};\n\n/**\n * Returns a block type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Block type name.\n *\n * @return {Object?} Block Type.\n */\nexport function getBlockType(\n\tstate: BlocksState,\n\tname: string\n): BlockTypeSettings | undefined {\n\treturn state[ name ];\n}\n\n/**\n * Returns the block support value for a feature, if defined.\n *\n * @param {Object}          state           Data state.\n * @param {(string|Object)} nameOrType      Block name or type object\n * @param {string}          feature         Feature to retrieve\n * @param {*}               defaultSupports Default value to return if not\n *                                          explicitly defined\n *\n * @return {?*} Block support value\n */\nexport const getBlockSupport = (\n\tstate: BlocksState,\n\tnameOrType: string | BlockTypeInterface,\n\tfeature: keyof BlockSupportedFeatures\n): boolean | undefined => {\n\tconst blockType = getNormalizedBlockType( state, nameOrType );\n\treturn get( blockType, [ 'supports', feature ] );\n};\n\n/**\n * Returns true if the block defines support for a feature, or false otherwise.\n *\n * @param {Object}          state           Data state.\n * @param {(string|Object)} nameOrType      Block name or type object.\n * @param {string}          feature         Feature to test.\n * @param {boolean}         defaultSupports Whether feature is supported by\n *                                          default if not explicitly defined.\n *\n * @return {boolean} Whether block supports feature.\n */\nexport function hasBlockSupport(\n\tstate: BlocksState,\n\tnameOrType: string,\n\tfeature: keyof BlockSupportedFeatures\n): boolean {\n\treturn !! getBlockSupport( state, nameOrType, feature );\n}\n","import { Component } from 'react';\nimport React, { FC } from 'react';\nimport {\n\tSET_BLOCK_ADMIN_SETTINGS,\n\tSET_BLOCK_RENDERER_SETTINGS,\n\tADD_BLOCK_TYPES,\n} from './store/constants';\nimport type { BlockAttributes, IconRenderer } from '@quillforms/types';\n\ninterface ControlsProps {\n\tid: string;\n\tattributes: BlockAttributes | undefined;\n\tsetAttributes( T: Record< string, unknown > ): void;\n}\n\ninterface EntryDetailsProps {\n\tid: string;\n\tattributes: BlockAttributes | undefined;\n\tvalue: any;\n}\nexport interface BlockAdminSettings {\n\ttitle?: string;\n\tcolor?: string;\n\ticon?: IconRenderer;\n\tcontrols?: React.ComponentType< ControlsProps >;\n\tlogicControl?: FC | Component | JSX.Element;\n\torder?: number;\n\tgetChoices?: ( args: {\n\t\tid: string;\n\t\tattributes: BlockAttributes;\n\t} ) => { label: string; value: string }[];\n\tentryDetails?: React.ComponentType< EntryDetailsProps >;\n}\n\nexport interface BlockRendererSettings {\n\tdisplay?: FC | Component | JSX.Element;\n\tdisplayLayout?: 'default' | 'split-right' | 'split-left';\n\tmergeTag?: FC | Component | JSX.Element;\n\tcounterIcon?: FC | Component | JSX.Element;\n\tnextBtn?: FC | Component | JSX.Element;\n\tgetNumericVal?: ( val: any, attributes: BlockAttributes ) => number;\n\tisConditionFulfilled?(\n\t\tconditionOperator: string,\n\t\tconditionVal: unknown,\n\t\tfieldValue: unknown\n\t): boolean;\n}\nexport type BlockSupportedFeatures = {\n\tinnerBlocks?: boolean;\n\tcontrols?: boolean;\n\tattachment?: boolean;\n\tdescription?: boolean;\n\teditable?: boolean;\n\trequired?: boolean;\n\tlogic?: boolean;\n\tlogicConditions?: boolean;\n\ttheme?: boolean;\n\tnumeric?: boolean;\n\tchoices?: boolean;\n\tpayments?: boolean;\n\tpoints?: boolean;\n};\n\ntype logicalOperator =\n\t| 'is'\n\t| 'is_not'\n\t| 'starts_with'\n\t| 'greater_than'\n\t| 'lower_than'\n\t| 'ends_with'\n\t| 'contains'\n\t| 'not_contains';\nexport interface BlockTypeSettings\n\textends BlockAdminSettings,\n\t\tBlockRendererSettings {\n\tattributes?: Record<\n\t\tstring,\n\t\t{\n\t\t\ttype: string;\n\t\t\tdefault?: unknown;\n\t\t\t[ x: string ]: unknown;\n\t\t}\n\t>;\n\tsupports: BlockSupportedFeatures;\n\tlogicalOperators?: logicalOperator[];\n}\n\nexport interface BlockTypeInterface extends BlockTypeSettings {\n\tname: string;\n}\n\nexport interface BlocksState {\n\t[ name: string ]: BlockTypeSettings;\n}\n\n/**\n * Actions\n */\n\ninterface anyAction {\n\ttype: string;\n\t[ x: string ]: unknown;\n}\ninterface setBlockRendererSettingsAction extends anyAction {\n\ttype: typeof SET_BLOCK_RENDERER_SETTINGS;\n\tsettings: BlockRendererSettings;\n\tname: string;\n}\n\ninterface setBlockAdminSettingsAction extends anyAction {\n\ttype: typeof SET_BLOCK_ADMIN_SETTINGS;\n\tsettings: BlockAdminSettings;\n\tname: string;\n}\n\ninterface addBlockTypesAction extends anyAction {\n\ttype: typeof ADD_BLOCK_TYPES;\n\tblockTypes: BlockTypeInterface[];\n}\nexport type BlockActionTypes =\n\t| setBlockRendererSettingsAction\n\t| setBlockAdminSettingsAction\n\t| addBlockTypesAction\n\t| ReturnType< () => { type: 'NOOP' } >;\n","module.exports = window[\"lodash\"];","module.exports = window[\"qf\"][\"utils\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { default as store } from './store';\nexport * from './api';\nexport * from './types';\n"],"names":["setBlockAdminSettings","setBlockRendererSettings","registerBlockType","getBlockType","sanitizeBlocks","sanitizeBlockAttributes","select","dispatch","pick","isPlainObject","getDefaultBlockSupports","editable","required","attachment","description","logic","logicConditions","numeric","choices","payments","points","name","settings","console","error","supports","attributes","type","default","properties","url","theme","themeId","label","customHTML","layout","attachmentFocalPoint","x","y","attachmentFancyBorderRadius","attachmentBorderRadius","attachmentMaxWidth","addBlockTypes","isFunction","isValidIcon","normalizeIconObject","title","color","icon","order","controls","blockType","src","logicControl","entryDetails","isNaN","getChoices","id","display","mergeTag","counterIcon","nextBtn","isConditionFulfilled","conditionOperator","conditionVal","fieldValue","Array","isArray","includes","parseFloat","indexOf","startsWith","endsWith","getNumericVal","val","_attributes","reduce","isEmpty","map","blockName","undefined","Error","accumulator","schema","key","value","hasOwnProperty","blocks","block","SET_BLOCK_ADMIN_SETTINGS","ADD_BLOCK_TYPES","SET_BLOCK_RENDERER_SETTINGS","castArray","blockRendererSettings","blockAdminSettings","blockTypes","STORE_KEY","register","createReduxStore","reducer","actions","selectors","store","keyBy","initialState","unknown","logicalOperators","BlocksReducer","state","action","get","sortBy","keys","getNormalizedBlockType","nameOrType","getBlockTypes","acc","getBlockSupport","feature","hasBlockSupport"],"sourceRoot":""}